//
// Created by bertrand on 27/09/18.
//

#ifndef GAMEBOY_OPS_H
#define GAMEBOY_OPS_H

#include "main.h"
typedef struct core core;

void noop(core *core, uint8_t *args);
void ld_bc_nn (core *c, uint8_t *args);
void ld_bc_a (core *c, uint8_t *args);
void ld_b_n (core *c, uint8_t *args);
void ld_nn_sp (core *c, uint8_t *args);
void ld_a_bc (core *c, uint8_t *args);
void ld_c_n (core *c, uint8_t *args);
void ld_de_nn (core *c, uint8_t *args);
void ld_de_a (core *c, uint8_t *args);
void ld_d_n (core *c, uint8_t *args);
void ld_a_de (core *c, uint8_t *args);
void ld_e_n (core *c, uint8_t *args);
void ld_hl_nn (core *c, uint8_t *args);
void ld_h_n (core *c, uint8_t *args);
void ld_l_n (core *c, uint8_t *args);
void ld_sp_nn (core *c, uint8_t *args);
void ld_hl_n (core *c, uint8_t *args);
void ld_a_n (core *c, uint8_t *args);
void ld_b_b (core *c, uint8_t *args);
void ld_b_c (core *c, uint8_t *args);
void ld_b_d (core *c, uint8_t *args);
void ld_b_e (core *c, uint8_t *args);
void ld_b_h (core *c, uint8_t *args);
void ld_b_l (core *c, uint8_t *args);
void ld_b_hl (core *c, uint8_t *args);
void ld_b_a (core *c, uint8_t *args);
void ld_c_b (core *c, uint8_t *args);
void ld_c_c (core *c, uint8_t *args);
void ld_c_d (core *c, uint8_t *args);
void ld_c_e (core *c, uint8_t *args);
void ld_c_h (core *c, uint8_t *args);
void ld_c_l (core *c, uint8_t *args);
void ld_c_hl (core *c, uint8_t *args);
void ld_c_a (core *c, uint8_t *args);
void ld_d_b (core *c, uint8_t *args);
void ld_d_c (core *c, uint8_t *args);
void ld_d_d (core *c, uint8_t *args);
void ld_d_e (core *c, uint8_t *args);
void ld_d_h (core *c, uint8_t *args);
void ld_d_l (core *c, uint8_t *args);
void ld_d_hl (core *c, uint8_t *args);
void ld_d_a (core *c, uint8_t *args);
void ld_e_b (core *c, uint8_t *args);
void ld_e_c (core *c, uint8_t *args);
void ld_e_d (core *c, uint8_t *args);
void ld_e_e (core *c, uint8_t *args);
void ld_e_h (core *c, uint8_t *args);
void ld_e_l (core *c, uint8_t *args);
void ld_e_hl (core *c, uint8_t *args);
void ld_e_a (core *c, uint8_t *args);
void ld_h_b (core *c, uint8_t *args);
void ld_h_c (core *c, uint8_t *args);
void ld_h_d (core *c, uint8_t *args);
void ld_h_e (core *c, uint8_t *args);
void ld_h_h (core *c, uint8_t *args);
void ld_h_l (core *c, uint8_t *args);
void ld_h_hl (core *c, uint8_t *args);
void ld_h_a (core *c, uint8_t *args);
void ld_l_b (core *c, uint8_t *args);
void ld_l_c (core *c, uint8_t *args);
void ld_l_d (core *c, uint8_t *args);
void ld_l_e (core *c, uint8_t *args);
void ld_l_h (core *c, uint8_t *args);
void ld_l_l (core *c, uint8_t *args);
void ld_l_hl (core *c, uint8_t *args);
void ld_l_a (core *c, uint8_t *args);
void ld_hl_b (core *c, uint8_t *args);
void ld_hl_c (core *c, uint8_t *args);
void ld_hl_d (core *c, uint8_t *args);
void ld_hl_e (core *c, uint8_t *args);
void ld_hl_h (core *c, uint8_t *args);
void ld_hl_l (core *c, uint8_t *args);
void ld_hl_a (core *c, uint8_t *args);
void ld_a_b (core *c, uint8_t *args);
void ld_a_c (core *c, uint8_t *args);
void ld_a_d (core *c, uint8_t *args);
void ld_a_e (core *c, uint8_t *args);
void ld_a_h (core *c, uint8_t *args);
void ld_a_l (core *c, uint8_t *args);
void ld_a_hl (core *c, uint8_t *args);
void ld_a_a (core *c, uint8_t *args);
void ld_nn_a (core *c, uint8_t *args);
void ld_sp_hl (core *c, uint8_t *args);
void ld_a_nn (core *c, uint8_t *args);
void ldh_a_n(core *c, uint8_t *args);
void ldh_n_a(core *c, uint8_t *args);
void ldh_c_a(core *c, uint8_t *args);
void xor_a(core *c, uint8_t *args);
void xor_b(core *c, uint8_t *args);
void xor_c(core *c, uint8_t *args);
void xor_d(core *c, uint8_t *args);
void xor_e(core *c, uint8_t *args);
void xor_h(core *c, uint8_t *args);
void xor_l(core *c, uint8_t *args);
void xor_hl(core *c, uint8_t *args);
void xor_n(core *c, uint8_t *args);
void inc_a(core *c, uint8_t *args);
void inc_b(core *c, uint8_t *args);
void inc_c(core *c, uint8_t *args);
void inc_d(core *c, uint8_t *args);
void inc_e(core *c, uint8_t *args);
void inc_h(core *c, uint8_t *args);
void inc_l(core *c, uint8_t *args);
void inc_hl(core *c, uint8_t *args);
void inc_bc(core *c, uint8_t *args);
void inc_de(core *c, uint8_t *args);
void inc_hl(core *c, uint8_t *args);
void inc_sp(core *c, uint8_t *args);
void dec_a(core *c, uint8_t *args);
void dec_b(core *c, uint8_t *args);
void dec_c(core *c, uint8_t *args);
void dec_d(core *c, uint8_t *args);
void dec_e(core *c, uint8_t *args);
void dec_h(core *c, uint8_t *args);
void dec_l(core *c, uint8_t *args);
void dec_hl(core *c, uint8_t *args);
void dec_bc(core *c, uint8_t *args);
void dec_de(core *c, uint8_t *args);
void dec_hl(core *c, uint8_t *args);
void dec_sp(core *c, uint8_t *args);
void rlc_a(core *c, uint8_t *args);
void rrc_a(core *c, uint8_t *args);
void rl_a(core *c, uint8_t *args);
void rr_a(core *c, uint8_t *args);
void add_a_a(core *c, uint8_t *args);
void add_a_b(core *c, uint8_t *args);
void add_a_c(core *c, uint8_t *args);
void add_a_d(core *c, uint8_t *args);
void add_a_e(core *c, uint8_t *args);
void add_a_h(core *c, uint8_t *args);
void add_a_l(core *c, uint8_t *args);
void add_a_hl(core *c, uint8_t *args);
void add_a_n(core *c, uint8_t *args);
void add_sp_d(core *c, uint8_t *args);
void add_hl_bc(core *c, uint8_t *args);
void add_hl_de(core *c, uint8_t *args);
void add_hl_hl(core *c, uint8_t *args);
void add_hl_sp(core *c, uint8_t *args);
void sub_a_a(core *c, uint8_t *args);
void sub_a_b(core *c, uint8_t *args);
void sub_a_c(core *c, uint8_t *args);
void sub_a_d(core *c, uint8_t *args);
void sub_a_e(core *c, uint8_t *args);
void sub_a_h(core *c, uint8_t *args);
void sub_a_l(core *c, uint8_t *args);
void sub_a_hl(core *c, uint8_t *args);
void sub_a_n(core *c, uint8_t *args);
void and_a(core *c, uint8_t *args);
void and_b(core *c, uint8_t *args);
void and_c(core *c, uint8_t *args);
void and_d(core *c, uint8_t *args);
void and_e(core *c, uint8_t *args);
void and_h(core *c, uint8_t *args);
void and_l(core *c, uint8_t *args);
void and_hl(core *c, uint8_t *args);
void and_n(core *c, uint8_t *args);
void or_a(core *c, uint8_t *args);
void or_b(core *c, uint8_t *args);
void or_c(core *c, uint8_t *args);
void or_d(core *c, uint8_t *args);
void or_e(core *c, uint8_t *args);
void or_h(core *c, uint8_t *args);
void or_l(core *c, uint8_t *args);
void or_hl(core *c, uint8_t *args);
void or_n(core *c, uint8_t *args);
void ldi_hl_a(core *c, uint8_t *args);
void ldi_a_hl(core *c, uint8_t *args);
void ldd_hl_a(core *c, uint8_t *args);
void ldd_a_hl(core *c, uint8_t *args);
void adc_a_a(core *c, uint8_t *args);
void adc_a_b(core *c, uint8_t *args);
void adc_a_c(core *c, uint8_t *args);
void adc_a_d(core *c, uint8_t *args);
void adc_a_e(core *c, uint8_t *args);
void adc_a_h(core *c, uint8_t *args);
void adc_a_l(core *c, uint8_t *args);
void adc_a_hl(core *c, uint8_t *args);
void adc_a_n(core *c, uint8_t *args);
void sbc_a_a(core *c, uint8_t *args);
void sbc_a_b(core *c, uint8_t *args);
void sbc_a_c(core *c, uint8_t *args);
void sbc_a_d(core *c, uint8_t *args);
void sbc_a_e(core *c, uint8_t *args);
void sbc_a_h(core *c, uint8_t *args);
void sbc_a_l(core *c, uint8_t *args);
void sbc_a_n(core *c, uint8_t *args);
void sbc_a_hl(core *c, uint8_t *args);
void cp_a(core *c, uint8_t *args);
void cp_b(core *c, uint8_t *args);
void cp_c(core *c, uint8_t *args);
void cp_d(core *c, uint8_t *args);
void cp_e(core *c, uint8_t *args);
void cp_h(core *c, uint8_t *args);
void cp_l(core *c, uint8_t *args);
void cp_hl(core *c, uint8_t *args);
void cp_n(core *c, uint8_t *args);
void cpl(core *c, uint8_t *args);

void jr_nz_n(core *c, uint8_t *args);
void jr_z_n(core *c, uint8_t *args);
void jr_nc_n(core *c, uint8_t *args);
void jr_c_n(core *c, uint8_t *args);
void jr_n(core *c, uint8_t *args);

void jp_nz_nn(core *c, uint8_t *args);
void jp_z_nn(core *c, uint8_t *args);
void jp_nc_nn(core *c, uint8_t *args);
void jp_c_nn(core *c, uint8_t *args);
void jp_nn(core *c, uint8_t *args);
void jp_hl(core *c, uint8_t *args);

void call_nz_nn(core *c, uint8_t *args);
void call_z_nn(core *c, uint8_t *args);
void call_nc_nn(core *c, uint8_t *args);
void call_c_nn(core *c, uint8_t *args);
void call_nn(core *c, uint8_t *args);

void ret_nz(core *c, uint8_t *args);
void ret_z(core *c, uint8_t *args);
void ret(core *c, uint8_t *args);
void ret_nc(core *c, uint8_t *args);
void ret_c(core *c, uint8_t *args);

void pop_bc(core *c, uint8_t *args);
void pop_de(core *c, uint8_t *args);
void pop_af(core *c, uint8_t *args);
void pop_hl(core *c, uint8_t *args);

void push_bc(core *c, uint8_t *args);
void push_de(core *c, uint8_t *args);
void push_af(core *c, uint8_t *args);
void push_hl(core *c, uint8_t *args);

void scf(core *c, uint8_t *args);
void ccf(core *c, uint8_t *args);

void rst_0(core *c, uint8_t *args);
void rst_8(core *c, uint8_t *args);
void rst_10(core *c, uint8_t *args);
void rst_18(core *c, uint8_t *args);
void rst_20(core *c, uint8_t *args);
void rst_28(core *c, uint8_t *args);
void rst_30(core *c, uint8_t *args);
void rst_38(core *c, uint8_t *args);

void reti(core *c, uint8_t *args);
void ei(core *c, uint8_t *args);
void di(core *c, uint8_t *args);
void daa(core *c, uint8_t *args);
void halt(core *c, uint8_t *args);
void stop(core *c, uint8_t *args);
void xx(core *c, uint8_t *args);

void rlc_b(core *c, uint8_t *args);
void rlc_c(core *c, uint8_t *args);
void rlc_d(core *c, uint8_t *args);
void rlc_e(core *c, uint8_t *args);
void rlc_h(core *c, uint8_t *args);
void rlc_l(core *c, uint8_t *args);
void rlc_hl(core *c, uint8_t *args);
void rlc_a(core *c, uint8_t *args);
void rrc_b(core *c, uint8_t *args);
void rrc_c(core *c, uint8_t *args);
void rrc_d(core *c, uint8_t *args);
void rrc_e(core *c, uint8_t *args);
void rrc_h(core *c, uint8_t *args);
void rrc_l(core *c, uint8_t *args);
void rrc_hl(core *c, uint8_t *args);
void rrc_a(core *c, uint8_t *args);
void rl_b(core *c, uint8_t *args);
void rl_c(core *c, uint8_t *args);
void rl_d(core *c, uint8_t *args);
void rl_e(core *c, uint8_t *args);
void rl_h(core *c, uint8_t *args);
void rl_l(core *c, uint8_t *args);
void rl_hl(core *c, uint8_t *args);
void rl_a(core *c, uint8_t *args);
void rr_b(core *c, uint8_t *args);
void rr_c(core *c, uint8_t *args);
void rr_d(core *c, uint8_t *args);
void rr_e(core *c, uint8_t *args);
void rr_h(core *c, uint8_t *args);
void rr_l(core *c, uint8_t *args);
void rr_hl(core *c, uint8_t *args);
void rr_a(core *c, uint8_t *args);
void sla_b(core *c, uint8_t *args);
void sla_c(core *c, uint8_t *args);
void sla_d(core *c, uint8_t *args);
void sla_e(core *c, uint8_t *args);
void sla_h(core *c, uint8_t *args);
void sla_l(core *c, uint8_t *args);
void sla_hl(core *c, uint8_t *args);
void sla_a(core *c, uint8_t *args);
void sra_b(core *c, uint8_t *args);
void sra_c(core *c, uint8_t *args);
void sra_d(core *c, uint8_t *args);
void sra_e(core *c, uint8_t *args);
void sra_h(core *c, uint8_t *args);
void sra_l(core *c, uint8_t *args);
void sra_hl(core *c, uint8_t *args);
void sra_a(core *c, uint8_t *args);
void swap_b(core *c, uint8_t *args);
void swap_c(core *c, uint8_t *args);
void swap_d(core *c, uint8_t *args);
void swap_e(core *c, uint8_t *args);
void swap_h(core *c, uint8_t *args);
void swap_l(core *c, uint8_t *args);
void swap_hl(core *c, uint8_t *args);
void swap_a(core *c, uint8_t *args);
void srl_b(core *c, uint8_t *args);
void srl_c(core *c, uint8_t *args);
void srl_d(core *c, uint8_t *args);
void srl_e(core *c, uint8_t *args);
void srl_h(core *c, uint8_t *args);
void srl_l(core *c, uint8_t *args);
void srl_hl(core *c, uint8_t *args);
void srl_a(core *c, uint8_t *args);
void bit_0_b(core *c, uint8_t *args);
void bit_0_c(core *c, uint8_t *args);
void bit_0_d(core *c, uint8_t *args);
void bit_0_e(core *c, uint8_t *args);
void bit_0_h(core *c, uint8_t *args);
void bit_0_l(core *c, uint8_t *args);
void bit_0_hl(core *c, uint8_t *args);
void bit_0_a(core *c, uint8_t *args);
void bit_1_b(core *c, uint8_t *args);
void bit_1_c(core *c, uint8_t *args);
void bit_1_d(core *c, uint8_t *args);
void bit_1_e(core *c, uint8_t *args);
void bit_1_h(core *c, uint8_t *args);
void bit_1_l(core *c, uint8_t *args);
void bit_1_hl(core *c, uint8_t *args);
void bit_1_a(core *c, uint8_t *args);
void bit_2_b(core *c, uint8_t *args);
void bit_2_c(core *c, uint8_t *args);
void bit_2_d(core *c, uint8_t *args);
void bit_2_e(core *c, uint8_t *args);
void bit_2_h(core *c, uint8_t *args);
void bit_2_l(core *c, uint8_t *args);
void bit_2_hl(core *c, uint8_t *args);
void bit_2_a(core *c, uint8_t *args);
void bit_3_b(core *c, uint8_t *args);
void bit_3_c(core *c, uint8_t *args);
void bit_3_d(core *c, uint8_t *args);
void bit_3_e(core *c, uint8_t *args);
void bit_3_h(core *c, uint8_t *args);
void bit_3_l(core *c, uint8_t *args);
void bit_3_hl(core *c, uint8_t *args);
void bit_3_a(core *c, uint8_t *args);
void bit_4_b(core *c, uint8_t *args);
void bit_4_c(core *c, uint8_t *args);
void bit_4_d(core *c, uint8_t *args);
void bit_4_e(core *c, uint8_t *args);
void bit_4_h(core *c, uint8_t *args);
void bit_4_l(core *c, uint8_t *args);
void bit_4_hl(core *c, uint8_t *args);
void bit_4_a(core *c, uint8_t *args);
void bit_5_b(core *c, uint8_t *args);
void bit_5_c(core *c, uint8_t *args);
void bit_5_d(core *c, uint8_t *args);
void bit_5_e(core *c, uint8_t *args);
void bit_5_h(core *c, uint8_t *args);
void bit_5_l(core *c, uint8_t *args);
void bit_5_hl(core *c, uint8_t *args);
void bit_5_a(core *c, uint8_t *args);
void bit_6_b(core *c, uint8_t *args);
void bit_6_c(core *c, uint8_t *args);
void bit_6_d(core *c, uint8_t *args);
void bit_6_e(core *c, uint8_t *args);
void bit_6_h(core *c, uint8_t *args);
void bit_6_l(core *c, uint8_t *args);
void bit_6_hl(core *c, uint8_t *args);
void bit_6_a(core *c, uint8_t *args);
void bit_7_b(core *c, uint8_t *args);
void bit_7_c(core *c, uint8_t *args);
void bit_7_d(core *c, uint8_t *args);
void bit_7_e(core *c, uint8_t *args);
void bit_7_h(core *c, uint8_t *args);
void bit_7_l(core *c, uint8_t *args);
void bit_7_hl(core *c, uint8_t *args);
void bit_7_a(core *c, uint8_t *args);
void res_0_b(core *c, uint8_t *args);
void res_0_c(core *c, uint8_t *args);
void res_0_d(core *c, uint8_t *args);
void res_0_e(core *c, uint8_t *args);
void res_0_h(core *c, uint8_t *args);
void res_0_l(core *c, uint8_t *args);
void res_0_hl(core *c, uint8_t *args);
void res_0_a(core *c, uint8_t *args);
void res_1_b(core *c, uint8_t *args);
void res_1_c(core *c, uint8_t *args);
void res_1_d(core *c, uint8_t *args);
void res_1_e(core *c, uint8_t *args);
void res_1_h(core *c, uint8_t *args);
void res_1_l(core *c, uint8_t *args);
void res_1_hl(core *c, uint8_t *args);
void res_1_a(core *c, uint8_t *args);
void res_2_b(core *c, uint8_t *args);
void res_2_c(core *c, uint8_t *args);
void res_2_d(core *c, uint8_t *args);
void res_2_e(core *c, uint8_t *args);
void res_2_h(core *c, uint8_t *args);
void res_2_l(core *c, uint8_t *args);
void res_2_hl(core *c, uint8_t *args);
void res_2_a(core *c, uint8_t *args);
void res_3_b(core *c, uint8_t *args);
void res_3_c(core *c, uint8_t *args);
void res_3_d(core *c, uint8_t *args);
void res_3_e(core *c, uint8_t *args);
void res_3_h(core *c, uint8_t *args);
void res_3_l(core *c, uint8_t *args);
void res_3_hl(core *c, uint8_t *args);
void res_3_a(core *c, uint8_t *args);
void res_4_b(core *c, uint8_t *args);
void res_4_c(core *c, uint8_t *args);
void res_4_d(core *c, uint8_t *args);
void res_4_e(core *c, uint8_t *args);
void res_4_h(core *c, uint8_t *args);
void res_4_l(core *c, uint8_t *args);
void res_4_hl(core *c, uint8_t *args);
void res_4_a(core *c, uint8_t *args);
void res_5_b(core *c, uint8_t *args);
void res_5_c(core *c, uint8_t *args);
void res_5_d(core *c, uint8_t *args);
void res_5_e(core *c, uint8_t *args);
void res_5_h(core *c, uint8_t *args);
void res_5_l(core *c, uint8_t *args);
void res_5_hl(core *c, uint8_t *args);
void res_5_a(core *c, uint8_t *args);
void res_6_b(core *c, uint8_t *args);
void res_6_c(core *c, uint8_t *args);
void res_6_d(core *c, uint8_t *args);
void res_6_e(core *c, uint8_t *args);
void res_6_h(core *c, uint8_t *args);
void res_6_l(core *c, uint8_t *args);
void res_6_hl(core *c, uint8_t *args);
void res_6_a(core *c, uint8_t *args);
void res_7_b(core *c, uint8_t *args);
void res_7_c(core *c, uint8_t *args);
void res_7_d(core *c, uint8_t *args);
void res_7_e(core *c, uint8_t *args);
void res_7_h(core *c, uint8_t *args);
void res_7_l(core *c, uint8_t *args);
void res_7_hl(core *c, uint8_t *args);
void res_7_a(core *c, uint8_t *args);
void set_0_b(core *c, uint8_t *args);
void set_0_c(core *c, uint8_t *args);
void set_0_d(core *c, uint8_t *args);
void set_0_e(core *c, uint8_t *args);
void set_0_h(core *c, uint8_t *args);
void set_0_l(core *c, uint8_t *args);
void set_0_hl(core *c, uint8_t *args);
void set_0_a(core *c, uint8_t *args);
void set_1_b(core *c, uint8_t *args);
void set_1_c(core *c, uint8_t *args);
void set_1_d(core *c, uint8_t *args);
void set_1_e(core *c, uint8_t *args);
void set_1_h(core *c, uint8_t *args);
void set_1_l(core *c, uint8_t *args);
void set_1_hl(core *c, uint8_t *args);
void set_1_a(core *c, uint8_t *args);
void set_2_b(core *c, uint8_t *args);
void set_2_c(core *c, uint8_t *args);
void set_2_d(core *c, uint8_t *args);
void set_2_e(core *c, uint8_t *args);
void set_2_h(core *c, uint8_t *args);
void set_2_l(core *c, uint8_t *args);
void set_2_hl(core *c, uint8_t *args);
void set_2_a(core *c, uint8_t *args);
void set_3_b(core *c, uint8_t *args);
void set_3_c(core *c, uint8_t *args);
void set_3_d(core *c, uint8_t *args);
void set_3_e(core *c, uint8_t *args);
void set_3_h(core *c, uint8_t *args);
void set_3_l(core *c, uint8_t *args);
void set_3_hl(core *c, uint8_t *args);
void set_3_a(core *c, uint8_t *args);
void set_4_b(core *c, uint8_t *args);
void set_4_c(core *c, uint8_t *args);
void set_4_d(core *c, uint8_t *args);
void set_4_e(core *c, uint8_t *args);
void set_4_h(core *c, uint8_t *args);
void set_4_l(core *c, uint8_t *args);
void set_4_hl(core *c, uint8_t *args);
void set_4_a(core *c, uint8_t *args);
void set_5_b(core *c, uint8_t *args);
void set_5_c(core *c, uint8_t *args);
void set_5_d(core *c, uint8_t *args);
void set_5_e(core *c, uint8_t *args);
void set_5_h(core *c, uint8_t *args);
void set_5_l(core *c, uint8_t *args);
void set_5_hl(core *c, uint8_t *args);
void set_5_a(core *c, uint8_t *args);
void set_6_b(core *c, uint8_t *args);
void set_6_c(core *c, uint8_t *args);
void set_6_d(core *c, uint8_t *args);
void set_6_e(core *c, uint8_t *args);
void set_6_h(core *c, uint8_t *args);
void set_6_l(core *c, uint8_t *args);
void set_6_hl(core *c, uint8_t *args);
void set_6_a(core *c, uint8_t *args);
void set_7_b(core *c, uint8_t *args);
void set_7_c(core *c, uint8_t *args);
void set_7_d(core *c, uint8_t *args);
void set_7_e(core *c, uint8_t *args);
void set_7_h(core *c, uint8_t *args);
void set_7_l(core *c, uint8_t *args);
void set_7_hl(core *c, uint8_t *args);
void set_7_a(core *c, uint8_t *args);
#endif //GAMEBOY_OPS_H
